// Mixins

// Dashes
/* Usage examples:

// Defaults a gray dash at the top left corner, using ::before element
@include big-dash;

// Override defaults and add own CSS rules to override
@include big-dash($orange,after) { // Will be orange and use the ::after pseudo element
  top: -2em; // top: 0 wouldn't work in this imaginary situation
}
*/

$big-dash-width: 52px;

@mixin big-dash($color: $gray, $pseudo: before) {
  position: relative;
  &::#{$pseudo}{ // By default will be ::before, unless before is specified
    top: 0;
    left: 0;
    content: '';
    height: 2px;
    background: $color;
    position: absolute;
    width: $big-dash-width;
    @content; // Allow overwriting (or adding) of properties, particulary position
  }
}

$small-dash-width: 27px;

// Modify big-dash to make small-dash
@mixin small-dash($color: $gray, $pseudo: after) {
  @include big-dash($color,$pseudo) {
    height: 1px;
    width: $small-dash-width;
    @content; // Allow overwriting (or adding) of properties, particulary position
  }
}

// Adds the ruler edge to a div
@mixin ruler-edge($pseudo: after) {
  &::#{$pseudo} { // Will be after by default
    top: 0;
    left: 0;
    bottom: 0;
    content: '';
    width: 15px;
    position: absolute;
    background-image: url('../images/ruler-edge.svg');
    @content;
  }
}

// Clearfix
@mixin clearfix {
  *zoom: 1;
  &:before, &:after {
    content: "\0020";
    display: block;
    height: 0;
    overflow: hidden;
  }
  &:after {
    clear: both;
  }
}

// Responsive mixins by Andy Richardson (@andimal): https://github.com/andimal/sass-responsive-mixin-madness
@mixin media-xs() { // Mobile
  @media screen and (max-width: $breakpoint-small - 1) {
    @content;
  }
}
@mixin media-sm() { // Larger Phone
  @media screen and (min-width: $breakpoint-small) {
    @content;
  }
}
@mixin media-md() { // Tablet
  @media screen and (min-width: $breakpoint-medium) {
    @content;
  }
}
@mixin media-lg() { // Desktop
  @media screen and (min-width: $breakpoint-large) {
    @content;
  }
}

// On-the fly media-queries
@mixin screen($res-min, $res-max) {
  @media screen and (min-width: $res-min) and (max-width: $res-max) {
    @content;
  }
}
@mixin max-screen($res) {
  @media screen and (max-width: $res) {
    @content;
  }
}
@mixin min-screen($res) {
  @media screen and (min-width: $res) {
    @content;
  }
}